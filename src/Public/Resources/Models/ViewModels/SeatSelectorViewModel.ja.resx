<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Available" xml:space="preserve">
    <value>予約可能</value>
  </data>
  <data name="On hold" xml:space="preserve">
    <value>保留中</value>
  </data>
  <data name="Reservations will close soon!" xml:space="preserve">
    <value>もうすぐ予約受付終了！</value>
  </data>
  <data name="Reservations will open soon!" xml:space="preserve">
    <value>もうすぐ予約受付開始！</value>
  </data>
  <data name="Reserve Seat" xml:space="preserve">
    <value>座席を予約</value>
  </data>
  <data name="Reserved" xml:space="preserve">
    <value>予約済</value>
  </data>
  <data name="Seat" xml:space="preserve">
    <value>座席</value>
  </data>
  <data name="Selected" xml:space="preserve">
    <value>選択済</value>
  </data>
  <data name="We're out of seats!" xml:space="preserve">
    <value>席が満席です！</value>
  </data>
  <data name="Reservations are closed!" xml:space="preserve">
    <value>予約締切り！</value>
  </data>
  <data name="&lt;!--details:OpeningSoon--&gt;" xml:space="preserve">
    <value>予約開始は&lt;time datetime="{0}" data-timezone="{1}"&gt;{2}&lt;/time&gt;です。</value>
  </data>
  <data name="&lt;!--details:ClosingSoon--&gt;" xml:space="preserve">
    <value>予約は&lt;time datetime="{0}" data-timezone="{1}"&gt;{2}&lt;/time&gt;に締め切られます。お早めに席を確保してください！</value>
  </data>
  <data name="&lt;!--details:OutOfSeatsTemporarily--&gt;" xml:space="preserve">
    <value>ご予約の一部はまだ保留中ですので、後日改めてご確認ください。</value>
  </data>
  <data name="&lt;!--details:OutOfSeatsPermanently--&gt;" xml:space="preserve">
    <value>全席予約済みです。申し訳ございませんが、空席はございません。</value>
  </data>
  <data name="&lt;!--details:ClosedPerSchedule--&gt;" xml:space="preserve">
    <value>席を購入いただいた皆様、ありがとうございます。イベントでお会いしましょう！</value>
  </data>
  <data name="&lt;!--details:ClosedManually--&gt;" xml:space="preserve">
    <value>予約は現在締め切られています。後日改めてご確認ください。</value>
  </data>
  <data name="Seat {} is no longer available." xml:space="preserve">
    <value>座席 {} はご利用いただけません。</value>
  </data>
  <data name="Stage" xml:space="preserve">
    <value>ステージ</value>
  </data>
  <data name="&lt;!-- reserve seat disclosure --&gt;" xml:space="preserve">
    <value>「{0}」をクリックすると、お客様のリクエストを処理するためにデータが保存・使用されます。収集される情報の詳細については、&lt;a href="/legal/privacy-policy"&gt;プライバシーポリシー&lt;/a&gt;をご覧ください。</value>
  </data>
  <data name="&lt;!--unauthorized:ReservationsAreClosed--&gt;" xml:space="preserve">
    <value>予約は締め切られました。</value>
  </data>
  <data name="&lt;!--unauthorized:TooManySeatLocksForIpAddress--&gt;" xml:space="preserve">
    <value>貴方のIPアドレスから送信された予約が多すぎます。</value>
  </data>
  <data name="JavaScript is disabled!" xml:space="preserve">
    <value>JavaScriptが無効になっています。</value>
  </data>
  <data name="Your browser doesn't support JavaScript or has disabled scripts on this page." xml:space="preserve">
    <value>お使いのブラウザはJavaScriptをサポートしていないか、このページのスクリプトが無効になっています。</value>
  </data>
</root>