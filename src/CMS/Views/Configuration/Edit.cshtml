@model ConfigurationEditViewModel;
<div class="container">
    <header class="mb-3">
        <h1>Configuration</h1>
    </header>

    <form method="post">

        <section>
            <h2 class="h5">Schedule</h2>

            <div class="mb-3">
                <label asp-for="ScheduledOpenDate" class="form-label">Scheduled open time</label>
                <div class="input-group">
                    <input asp-for="ScheduledOpenDate" class="form-control" aria-label="Scheduled open date">
                    <input asp-for="ScheduledOpenTime" step="1" class="form-control" aria-label="Scheduled open time">
                    <select asp-for="ScheduledOpenTimeZone" asp-items="Model.ValidTimeZones" class="form-select" aria-label="Scheduled open time zone"></select>
                </div>
            </div>

            <fieldset class="border rounded-3 p-3 mb-3">
                <legend class="float-none w-auto m-0 px-3 fs-6">Override schedule</legend>
                <div class="form-check">
                    <label class="form-check-label">
                        @Html.RadioButtonFor(p => p.ScheduleOverride, ConfigurationEditViewModel.OVERRIDE_OPEN, new { @class = "form-check-input" })
                        Force open reservations
                    </label>
                </div>
                <div class="form-check">
                    <label class="form-check-label">
                        @Html.RadioButtonFor(p => p.ScheduleOverride, ConfigurationEditViewModel.OVERRIDE_CLOSE, new { @class = "form-check-input" })
                        Force close reservations
                    </label>
                </div>
                <div class="form-check">
                    <label class="form-check-label">
                        @Html.RadioButtonFor(p => p.ScheduleOverride, ConfigurationEditViewModel.OVERRIDE_NONE, new { @class = "form-check-input" })
                        Use schedule
                    </label>
                </div>
            </fieldset>
        </section>

        <hr>

        <section>
            <h2 class="h5">Visitor limits</h2>

            <div class="mb-3">
                <label class="form-label" for="limitSeatsPerTransaction">Maximum seats per transaction</label>
                <input class="form-control w-auto" id="limitSeatsPerTransaction" value="1" disabled>
            </div>

            <div class="mb-3">
                <label asp-for="MaxSeatsPerPerson" class="form-label">Maximum seats per person</label>
                <input asp-for="MaxSeatsPerPerson" class="form-control w-auto">
            </div>

            <div class="mb-3">
                <label asp-for="MaxSeatsPerIPAddress" class="form-label">Maximum seats per IP address</label>
                <input asp-for="MaxSeatsPerIPAddress" class="form-control w-auto" aria-describedby="MaxSeatsPerIPAddress-help">
                <div id="MaxSeatsPerIPAddress-help" class="form-text">
                    This prevents a user from faking who they are to bypass the maximum seats per person, 
                    but it should be set high enough to allow users to share a public IP address (such as at a school or workplace).
                </div>
            </div>

            <div class="mb-3">
                <label asp-for="MaxSecondsToConfirmSeat" class="form-label">Maximum time (in seconds) to confirm seat</label>
                <input asp-for="MaxSecondsToConfirmSeat" class="form-control w-auto" required aria-describedby="MaxSecondsToConfirmSeat-help">
                <div id="MaxSecondsToConfirmSeat-help" class="form-text">
                    When a user clicks on a seat, that seat is placed on hold until they cancel or confirm their selection.
                    If the user does nothing, then we need to release the hold after some time.
                </div>
            </div>
        </section>

        <hr>

        <section>
            <button type="submit" class="btn btn-primary">Save configuration</button>
        </section>

    </form>
</div>
