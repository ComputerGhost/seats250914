@using Public.Features.Localization.Models
@model CultureSwitcherModel

<div class="dropdown">
    <button class="dropdown-toggle btn btn-secondary" type="button" data-bs-toggle="dropdown" aria-expanded="false">
        <i class="bi bi-globe"></i>
        <span class="visually-hidden">Change the language</span>
    </button>
    <ul class="dropdown-menu dropdown-menu-end">
        @foreach (var culture in Model.SupportedCultures)
        {
            <li>
                <button
                    class="@((Model.CurrentUICulture.Name == culture.Name) ? "dropdown-item active" : "dropdown-item")"
                    data-id="@culture.Name"
                    type="button"
                >@culture.NativeName</button>
            </li>
        }
    </ul>
</div>

@* We can't use jQuery here because it's not loaded yet.
(It should be loaded at the end of the body tag, right?) *@
@* @if (Model.UseRouteCulture)
{
    <script>
        var element = document.getElementById("culture-options");
        element.addEventListener("change", () => {
            var culture = element.options[element.selectedIndex].value;
            var segments = location.pathname.split('/');
            if (segments.length > 2) {
                segments[1] = culture;
                location.href = segments.join('/');
            } else {
                location.href = '/' + culture + location.pathname;
            }
        });
    </script>
}
else
{
    <script>
        document.getElementById("culture-options").addEventListener("change", () => {
            document.getElementById("culture-switcher").submit();
        });
    </script>
}
 *@